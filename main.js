let web3;
let contract;
let userAddress;

// Contract info
const contractAddress = "0x9B0Abb27524B2857322C2D3682c5bc819eDB6d73";

window.addEventListener("load", async () => {
    if (window.ethereum) {
        web3 = new Web3(window.ethereum);
        try {
            await ethereum.request({ method: "eth_requestAccounts" });
            const accounts = await web3.eth.getAccounts();
            userAddress = accounts[0];

            document.getElementById("walletStatus").innerHTML =
                `‚úÖ Wallet ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß: <br>${shortenAddress(userAddress)}`;

            contract = new web3.eth.Contract(abi, contractAddress);
            loadReferrer();

        } catch (err) {
            console.error("üõë Wallet connect error:", err);
            alert("‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Wallet ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
        }
    } else {
        alert("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö Wallet ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á MetaMask ‡∏´‡∏£‡∏∑‡∏≠ Bitget Wallet");
    }
});

function shortenAddress(address) {
    return address.slice(0, 6) + "..." + address.slice(-4);
}

async function loadReferrer() {
    if (!contract || !userAddress) return;

    try {
        const ref = await contract.methods.referrers(userAddress).call();
        if (ref === "0x0000000000000000000000000000000000000000") {
            document.getElementById("referrerStatus").innerText = "üìÆ Referrer: ‡πÑ‡∏°‡πà‡∏°‡∏µ";
        } else {
            document.getElementById("referrerStatus").innerText = `üìÆ Referrer: ${shortenAddress(ref)}`;
        }
    } catch (err) {
        console.error("‚ùå Load referrer error:", err);
    }
}

document.getElementById("connectWallet").addEventListener("click", async () => {
    if (window.ethereum) {
        try {
            await ethereum.request({ method: "eth_requestAccounts" });
            const accounts = await web3.eth.getAccounts();
            userAddress = accounts[0];
            document.getElementById("walletStatus").innerHTML =
                `‚úÖ Wallet ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß: <br>${shortenAddress(userAddress)}`;
            contract = new web3.eth.Contract(abi, contractAddress);
            loadReferrer();
        } catch (err) {
            alert("‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Wallet ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        }
    } else {
        alert("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö Wallet");
    }
});

document.getElementById("registerReferrer").addEventListener("click", async () => {
    if (!userAddress || !contract) {
        alert("üö´ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Wallet ‡∏Å‡πà‡∏≠‡∏ô");
        return;
    }

    const referrer = prompt("üìÆ ‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (Referrer):");
    if (!referrer || !web3.utils.isAddress(referrer)) {
        alert("‚ùå ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà Referrer ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
    }

    try {
        await contract.methods.registerReferrer(referrer).send({ from: userAddress });
        alert("‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô Referrer ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        loadReferrer();
    } catch (error) {
        console.error("‚ùå ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
        alert("‚ùå ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " + (error.message || ""));
    }
});

document.getElementById("recordPurchase").addEventListener("click", async () => {
    if (!userAddress || !contract) {
        alert("üö´ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Wallet ‡∏Å‡πà‡∏≠‡∏ô");
        return;
    }

    const amount = prompt("üí∞ ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠ (USDT):");
    const totalAmount = parseFloat(amount);

    if (isNaN(totalAmount) || totalAmount <= 0) {
        alert("‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
    }

    try {
        await contract.methods.recordPurchase(userAddress, web3.utils.toWei(totalAmount.toString(), 'ether'))
            .send({ from: userAddress });

        alert("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    } catch (err) {
        console.error("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
        alert("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + (err.message || ""));
    }
});
